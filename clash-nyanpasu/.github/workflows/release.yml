name: Release Build

on:
  release:
    types: [published]

env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short

jobs:
  release:
    strategy:
      matrix:
        targets:
          - os: windows-latest
            category: all
          - os: ubuntu-latest
            category: all
          - os: macos-13
            category: amd64
          - os: macos-13
            category: aarch64

    runs-on: ${{ matrix.targets.os }}
    if: startsWith(github.repository, 'LibNyanpasu')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: install Rust stable
        run: rustup install stable --profile minimal && rustup default stable

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "./backend/"
          prefix-key: "rust-stable"
          key: ${{ matrix.targets.os }}
          shared-key: "release"

      - name: Install the missing rust target (macOS Only)
        if: startsWith(matrix.targets.os, 'macos-')
        run: |
          rustup target add aarch64-apple-darwin

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Delete current release assets
        if: startsWith(matrix.targets.os, 'ubuntu-')
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.release.tag_name }}
          fail-if-no-assets: false
          fail-if-no-release: false
          assets: |
            *.zip
            *.gz
            *.AppImage
            *.deb
            *.dmg
            *.msi
            *.sig
            *.exe
            *.json

      - name: Install Dependencies (Ubuntu Only)
        if: startsWith(matrix.targets.os, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf openssl

      - uses: maxim-lobanov/setup-xcode@v1
        if: startsWith(matrix.targets.os, 'macos-')
        with:
          xcode-version: "15.0"

      - name: Pnpm install and check
        run: |
          pnpm i
          pnpm check

      - name: Tauri build
        if: startsWith(matrix.targets.os, 'macos-') == false || matrix.targets.category != 'aarch64'
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          releaseId: ${{ github.event.release.id }}
          # tagName: ${{ github.event.release.tag_name }}
          # releaseName: "Clash Nyanpasu ${{ github.event.release.tag_name }}"
          # releaseBody: "More new features are now supported."
          # releaseDraft: false
          # prerelease: false
          tauriScript: pnpm tauri
          args: -f default-meta -c ./backend/tauri/tauri.conf.json

      - name: Portable Bundle (Windows Only)
        if: startsWith(matrix.targets.os, 'windows-')
        run: |
          pnpm portable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          VITE_WIN_PORTABLE: 1

      - name: Pnpm check (macOS aarch64)
        if: startsWith(matrix.targets.os, 'macos-') && matrix.targets.category == 'aarch64'
        run: |
          pnpm check --arch arm64 --sidecar-host aarch64-apple-darwin

      - name: Tauri build with Upload (macOS aarch64)
        if: startsWith(matrix.targets.os, 'macos-') && matrix.targets.category == 'aarch64'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          pnpm build --target aarch64-apple-darwin
          pnpm upload:osx-aarch64

  release-update:
    needs: release
    runs-on: ubuntu-latest
    if: |
      startsWith(github.repository, 'LibNyanpasu')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Pnpm install
        run: pnpm i

      - name: Release updater file
        run: pnpm updater
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_BODY: ${{ github.event.release.body }}

      - name: Send Telegram Channel Notify
        run: pnpm send-notify
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_TO: "@keikolog"
