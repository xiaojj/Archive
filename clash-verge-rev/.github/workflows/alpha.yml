name: Alpha Build

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags-ignore: [updater, alpha]
permissions: write-all
env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short

jobs:
  alpha:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Pnpm install and check
        run: |
          pnpm i
          pnpm check ${{ matrix.target }}

      - name: Tauri build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: alpha
          releaseName: "Clash Verge Rev Alpha"
          releaseBody: "More new features are now supported."
          releaseDraft: false
          prerelease: true
          tauriScript: pnpm
          args: --target ${{ matrix.target }}

      - name: Portable Bundle
        if: matrix.os == 'windows-latest'
        run: pnpm portable ${{ matrix.target }} --alpha
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

  alpha-for-linux:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build for Linux
        uses: ./.github/build-for-linux
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          target: ${{ matrix.target }}

      - name: Get Version
        run: |
          sudo apt-get update
          sudo apt-get install jq
          echo "VERSION=$(cat package.json | jq '.version' | tr -d '"')" >> $GITHUB_ENV
          echo "BUILDTIME=$(TZ=Asia/Shanghai date)" >> $GITHUB_ENV

      - run: |
          cat > release.txt << 'EOF'
          ### 我应该下载哪个版本？

          - Windows x86_64架构: x64-setup.exe (不支持win7)
          - Windows arm64架构: arm64-setup.exe
          - MacOS intel芯片: x64.dmg
          - MacOS apple M芯片: aarch64.dmg (提示文件损坏看下面FAQ)
          - Linux x64架构: amd64.AppImage/amd64.deb
          - Linux arm64架构: arm64.deb
          - Linux armv7架构: armhf.deb
          - Windows 便携板 x86_64架构: x64_portable.zip (不推荐使用，无法自动更新)
          - Windows 便携板 arm64架构: arm64_portable.zip (不推荐使用，无法自动更新)

          ### FAQ

          - [FAQ](https://clash-verge-rev.github.io/faq/install/)

          Created at  ${{ env.BUILDTIME }}.
          EOF

      - name: Upload Release
        if: startsWith(matrix.target, 'x86_64')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: alpha
          name: "Clash Verge Rev Alpha"
          body_path: release.txt
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: src-tauri/target/${{ matrix.target }}/release/bundle/appimage/*.AppImage*

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: alpha
          name: "Clash Verge Rev Alpha"
          body_path: release.txt
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: src-tauri/target/${{ matrix.target }}/release/bundle/deb/*.deb

  update_tag:
    name: Update tag
    runs-on: ubuntu-latest
    needs: [alpha, alpha-for-linux]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Env
        run: |
          echo "BUILDTIME=$(TZ=Asia/Shanghai date)" >> $GITHUB_ENV
        shell: bash

      - name: Update Tag
        uses: richardsimko/update-tag@v1
        with:
          tag_name: alpha
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          cat > release.txt << 'EOF'
          ### 我应该下载哪个版本？

          - Windows x86_64架构: x64-setup.exe (不支持win7)
          - Windows arm64架构: arm64-setup.exe
          - MacOS intel芯片: x64.dmg
          - MacOS apple M芯片: aarch64.dmg (提示文件损坏看下面FAQ)
          - Linux x64架构: amd64.AppImage/amd64.deb
          - Linux arm64架构: arm64.deb
          - Linux armv7架构: armhf.deb
          - Windows 便携板 x86_64架构: x64_portable.zip (不推荐使用，无法自动更新)
          - Windows 便携板 arm64架构: arm64_portable.zip (不推荐使用，无法自动更新)

          ### FAQ

          - [FAQ](https://clash-verge-rev.github.io/faq/install/)

          Created at  ${{ env.BUILDTIME }}.
          EOF

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: alpha
          name: "Clash Verge Rev Alpha"
          body_path: release.txt
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
