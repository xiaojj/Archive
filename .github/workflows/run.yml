on:
  push:
    paths:
      - '.github/workflows/run.yml'
  schedule:
    - cron: "0 18 */1 * *"

name: sync
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TZ: Europe/Busingen
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Set Variables
        run: |
          echo "VERSION=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV

      - name: Sync
        run: |
          # Clean Repository
          mv anxray .github
          rm -rf *
          export GCRS="git clone --recurse-submodules"
          # GFW Projects
          ${GCRS} https://github.com/v2fly/v2ray-core v2ray-core
          ${GCRS} https://github.com/XTLS/Xray-core Xray-core
          ${GCRS} https://github.com/trojan-gfw/trojan trojan-gfw
          ${GCRS} https://github.com/p4gefau1t/trojan-go trojan-go
          ${GCRS} https://github.com/p4gefau1t/trojan-r trojan-r
          ${GCRS} https://github.com/lazytiger/trojan-rs trojan-rs
          ${GCRS} https://github.com/cty123/TrojanRust trojanrust
          ${GCRS} https://github.com/shadowsocks/shadowsocks-libev shadowsocks-libev
          ${GCRS} https://github.com/shadowsocks/go-shadowsocks2 go-shadowsocks2
          ${GCRS} https://github.com/shadowsocks/shadowsocks-rust shadowsocks-rust
          ${GCRS} https://github.com/klzgrad/naiveproxy naiveproxy
          ${GCRS} https://github.com/txthinking/brook brook
          ${GCRS} https://github.com/Dreamacro/clash clash
          ${GCRS} https://github.com/ihciah/shadow-tls shadow-tls
          # GFW Client Projects
          ${GCRS} https://github.com/shadowsocks/shadowsocks-windows shadowsocks-windows
          ${GCRS} https://github.com/shadowsocks/shadowsocks-android shadowsocks-android
          ${GCRS} https://github.com/shadowsocks/ShadowsocksX-NG shadowsocksx-ng
          ${GCRS} https://github.com/2dust/v2rayN v2rayn
          ${GCRS} https://github.com/2dust/v2rayNG v2rayng
          ${GCRS} https://github.com/yanue/V2rayU -b master v2rayu
          ${GCRS} https://github.com/v2rayA/v2rayA v2raya
          ${GCRS} https://github.com/Qv2ray/Qv2ray qv2ray-qv2ray
          ${GCRS} https://github.com/Shadowsocks-NET/Qv2ray ssnet-qv2ray
          ${GCRS} https://github.com/yichengchen/clashX clashx
          ${GCRS} https://github.com/Fndroid/clash_for_windows_pkg clash-cfw
          ${GCRS} https://github.com/zzzgydi/clash-verge clash-verge
          ${GCRS} https://github.com/2dust/clashN clashn
          ${GCRS} https://github.com/Kr328/ClashForAndroid clash-cfa
          ${GCRS} https://github.com/trojan-gfw/igniter igniter
          ${GCRS} https://github.com/trojan-gfw/igniter-go-libs igniter/app/src/libs/go-libs && rm -rfv igniter/app/src/libs/go-libs/.git
          ${GCRS} https://github.com/SagerNet/SagerNet sagernet
          ${GCRS} https://github.com/xxf098/shadowsocksr-v2ray-trojan-android svt-android
          ${GCRS} https://github.com/netchx/netch netch
          # Openwrt Projects
          ${GCRS} https://github.com/coolsnowwolf/lede lede
          ${GCRS} https://github.com/xiaorouji/openwrt-passwall openwrt-passwall
          ${GCRS} https://github.com/fw876/helloworld helloworld
          ${GCRS} https://github.com/kenzok8/openwrt-packages openwrt-packages
          ${GCRS} https://github.com/kenzok8/small small
          # Network Tools
          ${GCRS} https://github.com/klzgrad/forwardproxy forwardproxy
          ${GCRS} https://github.com/wangyu-/udp2raw udp2raw
          ${GCRS} https://github.com/wangyu-/udp2raw-multiplatform udp2raw-multi
          ${GCRS} https://github.com/m13253/dns-over-https dns-over-https
          ${GCRS} https://github.com/nadoo/glider glider
          ${GCRS} https://github.com/ginuerzh/gost gost
          ${GCRS} https://github.com/HyNetwork/hysteria hysteria
          ${GCRS} https://github.com/esrrhs/pingtunnel pingtunnel
          ${GCRS} https://github.com/Ehco1996/ehco echo
          ${GCRS} https://github.com/Loyalsoldier/v2ray-rules-dat v2ray-rules-dat
          ${GCRS} https://github.com/Loyalsoldier/geoip geoip
          ${GCRS} https://github.com/17mon/china_ip_list china-ip
          ${GCRS} https://github.com/ip-scanner/cloudflare ip-scanner
          ${GCRS} https://github.com/EAimTY/tuic tuic
          ## Media Tools
          ${GCRS} https://github.com/nilaoda/BBDown bbdown
          ${GCRS} https://github.com/ytdl-org/youtube-dl youtube-dl
          ${GCRS} https://github.com/yt-dlp/yt-dlp yt-dlp
          ${GCRS} https://github.com/the1812/Bilibili-Evolved bb-evolved
          ${GCRS} https://github.com/rachpt/lanzou-gui lanzou-gui
          ${GCRS} https://github.com/liupan1890/aliyunpan aliyunpan
          ${GCRS} https://github.com/unlock-music/unlock-music unlock-music
          ${GCRS} https://github.com/filebrowser/filebrowser filebrowser
          ${GCRS} https://github.com/nilaoda/N_m3u8DL-CLI m3u8-cli
          ${GCRS} https://github.com/qier222/YesPlayMusic yesplaymusic
          ${GCRS} https://github.com/Codennnn/vue-color-avatar vue-color-avatar
          ${GCRS} https://github.com/DIGITALCRIMINALS/OnlyFans onlyfans
          # Clean Git Info
          rm -rf */.git
          echo "Update On $(date)" >> .github/update.log
          mv .github/anxray .
          # Git Commit
          git config --local user.name "github-action[bot]"
          git config --local user.email "${{ secrets.EMAIL }}"
          git add .
          git commit -am "Update On $(date)"

      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Backup Binaries
        run: |
          # shadowsocks-windows
          mkdir -p shadowsocks-windows/Clients
          pushd shadowsocks-windows/Clients || exit 1
          wget -qO- https://api.github.com/repos/shadowsocks/shadowsocks-windows/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # shadowsocks-android
          mkdir -p shadowsocks-android/Clients
          pushd shadowsocks-android/Clients || exit 1
          wget -qO- https://api.github.com/repos/shadowsocks/shadowsocks-android/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # shadowsocksx-ng
          mkdir -p shadowsocksx-ng/Clients
          pushd shadowsocksx-ng/Clients || exit 1
          wget -qO- https://api.github.com/repos/shadowsocks/ShadowsocksX-NG/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # v2rayn
          mkdir -p v2rayn/Clients
          pushd v2rayn/Clients || exit 1
          wget -qO- https://api.github.com/repos/2dust/v2rayN/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # v2rayng
          mkdir -p v2rayng/Clients
          pushd v2rayng/Clients || exit 1
          wget -qO- https://api.github.com/repos/2dust/v2rayNG/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # v2rayu
          mkdir -p v2rayu/Clients
          pushd v2rayu/Clients || exit 1
          wget -qO- https://api.github.com/repos/yanue/V2rayU/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # v2raya
          mkdir -p v2raya/Clients
          pushd v2raya/Clients || exit 1
          wget -qO- https://api.github.com/repos/v2rayA/v2rayA/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 
          # qv2ray-qv2ray
          mkdir -p qv2ray-qv2ray/Clients
          pushd qv2ray-qv2ray/Clients || exit 1
          wget -qO- https://api.github.com/repos/Qv2ray/Qv2ray/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # qv2ray-qv2ray plugins
          mkdir -p qv2ray-qv2ray/Clients/plugins
          pushd qv2ray-qv2ray/Clients/plugins || exit 1
          wget -qO- https://api.github.com/repos/Qv2ray/QvPlugin-Trojan/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          wget -qO- https://api.github.com/repos/Qv2ray/QvPlugin-Trojan-Go/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          wget -qO- https://api.github.com/repos/Qv2ray/QvPlugin-SSR/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          wget -qO- https://api.github.com/repos/Qv2ray/QvPlugin-SS/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          wget -qO- https://api.github.com/repos/Qv2ray/QvPlugin-Command/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          wget -qO- https://api.github.com/repos/Qv2ray/QvPlugin-NaiveProxy/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # ssnet-qv2ray
          mkdir -p ssnet-qv2ray/Clients
          pushd ssnet-qv2ray/Clients || exit 1
          wget -qO- https://api.github.com/repos/Shadowsocks-NET/Qv2ray/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # ssnet-qv2ray plugins
          mkdir -p ssnet-qv2ray/Clients/plugins
          pushd ssnet-qv2ray/Clients/plugins || exit 1
          wget -qO- https://api.github.com/repos/bolucat/peace/releases/tags/qvplugin | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # clashx
          mkdir -p clashx/Clients
          pushd clashx/Clients || exit 1
          wget -qO- https://api.github.com/repos/yichengchen/clashX/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # clash-cfw
          mkdir -p clash-cfw/Clients
          pushd clash-cfw/Clients || exit 1
          wget -qO- https://api.github.com/repos/Fndroid/clash_for_windows_pkg/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # clash-cfa
          mkdir -p clash-cfa/Clients
          pushd clash-cfa/Clients || exit 1
          wget -qO- https://api.github.com/repos/Kr328/ClashForAndroid/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # clash-verge
          mkdir -p clash-verge/Clients
          pushd clash-verge/Clients || exit 1
          wget -qO- https://api.github.com/repos/zzzgydi/clash-verge/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # clashn
          mkdir -p clashn/Clients
          pushd clashn/Clients || exit 1
          wget -qO- https://api.github.com/repos/2dust/clashN/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # igniter
          mkdir -p igniter/Clients
          pushd igniter/Clients || exit 1
          wget -qO- https://api.github.com/repos/trojan-gfw/igniter/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # sagernet
          mkdir -p sagernet/Clients
          pushd sagernet/Clients || exit 1
          wget -qO- https://api.github.com/repos/SagerNet/SagerNet/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # sagernet plugins
          mkdir -p sagernet/Clients/plugins
          pushd sagernet/Clients/plugins || exit 1
          export Xtls_Plugin=$(wget -qO- https://api.github.com/repos/SagerNet/SagerNet/tags | grep 'name' | grep "xtls-plugin" | cut -d\" -f4 | sort -Vr | head -1)
          export Wireguard_Plugin=$(wget -qO- https://api.github.com/repos/SagerNet/SagerNet/tags | grep 'name' | grep "wireguard-plugin" | cut -d\" -f4 | sort -Vr | head -1)
          export Naive_Plugin=$(wget -qO- https://api.github.com/repos/SagerNet/SagerNet/tags | grep 'name' | grep "naive-plugin" | cut -d\" -f4 | sort -Vr | head -1)
          export Trojan_Go_Plugin=$(wget -qO- https://api.github.com/repos/SagerNet/SagerNet/tags | grep 'name' | grep "trojan-go-plugin" | cut -d\" -f4 | sort -Vr | head -1)
          export Hysteria_Plugin=$(wget -qO- https://api.github.com/repos/SagerNet/SagerNet/tags | grep 'name' | grep "hysteria-plugin" | cut -d\" -f4 | sort -Vr | head -1)
          export Brook_Plugin=$(wget -qO- https://api.github.com/repos/SagerNet/SagerNet/tags | grep 'name' | grep "brook-plugin" | cut -d\" -f4 | sort -Vr | head -1)
          export Relayboton_Plugin=$(wget -qO- https://api.github.com/repos/SagerNet/SagerNet/tags | grep 'name' | grep "relaybaton-plugin" | cut -d\" -f4 | sort -Vr | head -1)
          export Pingtunnel_Plugin=$(wget -qO- https://api.github.com/repos/SagerNet/SagerNet/tags | grep 'name' | grep "pingtunnel-plugin" | cut -d\" -f4 | sort -Vr | head -1)
          wget -qO- https://api.github.com/repos/SagerNet/SagerNet/releases/tags/${Xtls_Plugin} | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          wget -qO- https://api.github.com/repos/SagerNet/SagerNet/releases/tags/${Wireguard_Plugin} | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          wget -qO- https://api.github.com/repos/SagerNet/SagerNet/releases/tags/${Naive_Plugin} | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          wget -qO- https://api.github.com/repos/SagerNet/SagerNet/releases/tags/${Trojan_Go_Plugin} | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          wget -qO- https://api.github.com/repos/SagerNet/SagerNet/releases/tags/${Hysteria_Plugin} | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          wget -qO- https://api.github.com/repos/SagerNet/SagerNet/releases/tags/${Brook_Plugin} | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          wget -qO- https://api.github.com/repos/SagerNet/SagerNet/releases/tags/${Relayboton_Plugin} | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          wget -qO- https://api.github.com/repos/SagerNet/SagerNet/releases/tags/${Pingtunnel_Plugin} | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # svt-android
          mkdir -p svt-android/Clients
          pushd svt-android/Clients || exit 1
          wget -qO- https://api.github.com/repos/xxf098/shadowsocksr-v2ray-trojan-android/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # v2ray-rules-dat
          mkdir -p v2ray-rules-dat/Clients
          pushd v2ray-rules-dat/Clients || exit 1
          wget -qO- https://api.github.com/repos/Loyalsoldier/v2ray-rules-dat/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # geoip
          mkdir -p geoip/Clients
          pushd geoip/Clients || exit 1
          wget -qO- https://api.github.com/repos/Loyalsoldier/geoip/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # udp2raw
          mkdir -p udp2raw/Clients
          pushd udp2raw/Clients || exit 1
          wget -qO- https://api.github.com/repos/wangyu-/udp2raw/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # udp2raw-multi
          mkdir -p udp2raw-multi/Clients
          pushd udp2raw-multi/Clients || exit 1
          wget -qO- https://api.github.com/repos/wangyu-/udp2raw-multiplatform/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # brook
          mkdir -p brook/Clients
          pushd brook/Clients || exit 1
          wget -qO- https://api.github.com/repos/txthinking/brook/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # clash premium
          mkdir -p clash/Clients
          pushd clash/Clients || exit 1
          wget -qO- https://api.github.com/repos/Dreamacro/clash/releases/tags/premium | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # netch
          mkdir -p netch/Clients
          pushd netch/Clients || exit 1
          export NETCH_VER=$(wget -qO- https://api.github.com/repos/netchx/netch/tags | grep 'name' | cut -d\" -f4 | sort -hr | sed $'/\//d' | head -1)
          wget -qO- https://api.github.com/repos/netchx/netch/releases/tags/${NETCH_VER} | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # bbdown
          mkdir -p bbdown/Clients
          pushd bbdown/Clients || exit 1
          wget -qO- https://api.github.com/repos/nilaoda/BBDown/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # youtube-dl
          mkdir -p youtube-dl/Clients
          pushd youtube-dl/Clients || exit 1
          wget -qO- https://api.github.com/repos/ytdl-org/youtube-dl/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # yt-dlp
          mkdir -p yt-dlp/Clients
          pushd yt-dlp/Clients || exit 1
          wget -qO- https://api.github.com/repos/yt-dlp/yt-dlp/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # lanzou-gui
          mkdir -p lanzou-gui/Clients
          pushd lanzou-gui/Clients || exit 1
          wget -qO- https://api.github.com/repos/rachpt/lanzou-gui/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # aliyunpan
          mkdir -p aliyunpan/Clients
          pushd aliyunpan/Clients || exit 1
          wget -qO- https://api.github.com/repos/liupan1890/aliyunpan/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # unlock-music
          mkdir -p unlock-music/Clients
          pushd unlock-music/Clients || exit 1
          wget -qO- https://api.github.com/repos/unlock-music/unlock-music/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # filebrowser
          mkdir -p filebrowser/Clients
          pushd filebrowser/Clients || exit 1
          wget -qO- https://api.github.com/repos/filebrowser/filebrowser/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # m3u8-cli
          mkdir -p m3u8-cli/Clients
          pushd m3u8-cli/Clients || exit 1
          wget -qO- https://api.github.com/repos/nilaoda/N_m3u8DL-CLI/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1
          # yesplaymusic
          mkdir -p yesplaymusic/Clients
          pushd yesplaymusic/Clients || exit 1
          wget -qO- https://api.github.com/repos/qier222/YesPlayMusic/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | wget -q -i -
          popd || exit 1

      - name: Compress to packages
        run: |
          mkdir -p release
          export Z9R="zip -9 -r -qq"
          # Compressing
          ${Z9R} shadowsocks-windows.zip shadowsocks-windows
          ${Z9R} shadowsocks-android.zip shadowsocks-android
          ${Z9R} shadowsocksx-ng.zip shadowsocksx-ng
          # shadowsocks-clients-full
          ${Z9R} shadowsocks-clients-full.zip . -i shadowsocks-windows.zip shadowsocks-android.zip shadowsocksx-ng.zip
          rm -rfv shadowsocks-windows.zip shadowsocks-android.zip shadowsocksx-ng.zip
          ${Z9R} v2rayn.zip v2rayn
          ${Z9R} v2rayng.zip v2rayng
          ${Z9R} v2rayu.zip v2rayu
          ${Z9R} v2raya.zip v2raya
          # v2ray-clients-full
          ${Z9R} v2ray-clients-full.zip . -i v2rayn.zip v2rayng.zip v2rayu.zip v2raya.zip
          rm -rfv v2rayn.zip v2rayng.zip v2rayu.zip v2raya.zip
          ${Z9R} qv2ray-qv2ray.zip qv2ray-qv2ray
          ${Z9R} ssnet-qv2ray.zip ssnet-qv2ray
          # qv2ray-full
          ${Z9R} qv2ray-full.zip . -i qv2ray-qv2ray.zip ssnet-qv2ray.zip
          rm -rfv qv2ray-qv2ray.zip ssnet-qv2ray.zip
          ${Z9R} clashx.zip clashx
          ${Z9R} clash-cfw.zip clash-cfw
          ${Z9R} clash-cfa.zip clash-cfa
          ${Z9R} clash-verge.zip clash-verge
          ${Z9R} clashn.zip clashn
          # clash
          ${Z9R} clash-clients-full.zip . -i clashx.zip clash-cfw.zip clash-cfa.zip clash-verge.zip clashn.zip
          rm -rfv clashx.zip clash-cfw.zip clash-cfa.zip
          ${Z9R} igniter.zip igniter
          ${Z9R} sagernet.zip sagernet
          ${Z9R} anxray.zip anxray
          ${Z9R} svt-android.zip svt-android
          ${Z9R} v2ray-rules-dat.zip v2ray-rules-dat
          ${Z9R} geoip.zip geoip
          ${Z9R} china-ip.zip china-ip
          ${Z9R} udp2raw.zip udp2raw
          ${Z9R} udp2raw-multi.zip udp2raw-multi
          ${Z9R} tuic.zip tuic
          # udp2raw-full
          ${Z9R} udp2raw-full.zip . -i udp2raw.zip udp2raw-multi.zip
          rm -rfv udp2raw.zip udp2raw-multi.zip
          ${Z9R} brook.zip brook
          ${Z9R} clash.zip clash
          ${Z9R} v2ray-core.zip v2ray-core
          ${Z9R} Xray-core.zip Xray-core
          # v2ray–full
          ${Z9R} v2ray–full.zip . -i v2ray-core.zip Xray-core.zip
          rm -rfv v2ray-core.zip Xray-core.zip
          ${Z9R} trojan-gfw.zip trojan-gfw
          ${Z9R} trojan-go.zip trojan-go
          ${Z9R} trojan-r.zip trojan-r
          ${Z9R} trojan-rs.zip trojan-rs
          ${Z9R} trojanrust.zip trojanrust
          # trojan–full
          ${Z9R} trojan–full.zip . -i trojan-gfw.zip trojan-go.zip trojan-r.zip trojan-rs.zip trojanrust.zip
          rm -rfv trojan-gfw.zip trojan-go.zip trojan-r.zip trojan-rs.zip trojanrust.zip
          ${Z9R} shadowsocks-libev.zip shadowsocks-libev
          ${Z9R} go-shadowsocks2.zip go-shadowsocks2
          ${Z9R} shadowsocks-rust.zip shadowsocks-rust
          # shadowsocks–full
          ${Z9R} shadowsocks–full.zip . -i shadowsocks-libev.zip go-shadowsocks2.zip shadowsocks-rust.zip
          rm -rfv shadowsocks-libev.zip go-shadowsocks2.zip shadowsocks-rust.zip
          ${Z9R} naiveproxy.zip naiveproxy
          ${Z9R} lede.zip lede
          ${Z9R} openwrt-passwall.zip openwrt-passwall
          ${Z9R} helloworld.zip helloworld
          ${Z9R} openwrt-packages.zip openwrt-packages
          ${Z9R} small.zip small
          # openwrt
          ${Z9R} openwrt.zip . -i lede.zip openwrt-passwall.zip helloworld.zip openwrt-packages.zip small.zip
          rm -rfv lede.zip openwrt-passwall.zip helloworld.zip openwrt-packages.zip small.zip
          ${Z9R} forwardproxy.zip forwardproxy
          ${Z9R} glider.zip glider
          ${Z9R} gost.zip gost
          ${Z9R} hysteria.zip hysteria
          ${Z9R} pingtunnel.zip pingtunnel
          ${Z9R} echo.zip echo
          ${Z9R} netch.zip netch
          ${Z9R} bbdown.zip bbdown
          ${Z9R} youtube-dl.zip youtube-dl
          ${Z9R} yt-dlp.zip yt-dlp
          # youtube-dl-full
          ${Z9R} youtube-dl-full.zip . -i youtube-dl.zip yt-dlp.zip
          rm -rfv youtube-dl.zip yt-dlp.zip
          ${Z9R} lanzou-gui.zip lanzou-gui
          ${Z9R} aliyunpan.zip aliyunpan
          ${Z9R} unlock-music.zip unlock-music
          ${Z9R} filebrowser.zip filebrowser
          ${Z9R} m3u8-cli.zip m3u8-cli
          ${Z9R} yesplaymusic.zip yesplaymusic
          ${Z9R} vue-color-avatar.zip vue-color-avatar
          ${Z9R} onlyfans.zip onlyfans
          # Move to Release
          mv *.zip release

      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          draft: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/shadowsocks-clients-full.zip
          asset_name: shadowsocks-clients-full.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/v2ray-clients-full.zip
          asset_name: v2ray-clients-full.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/qv2ray-full.zip
          asset_name: qv2ray-full.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/clash-clients-full.zip
          asset_name: clash-clients-full.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/igniter.zip
          asset_name: igniter.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/sagernet.zip
          asset_name: sagernet.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/anxray.zip
          asset_name: anxray.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/svt-android.zip
          asset_name: svt-android.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/v2ray-rules-dat.zip
          asset_name: v2ray-rules-dat.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/geoip.zip
          asset_name: geoip.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/china-ip.zip
          asset_name: china-ip.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/udp2raw-full.zip
          asset_name: udp2raw-full.zip
          asset_content_type: application/zip
          
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/tuic.zip
          asset_name: tuic.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/brook.zip
          asset_name: brook.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/clash.zip
          asset_name: clash.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/v2ray–full.zip
          asset_name: v2ray–full.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/trojan–full.zip
          asset_name: trojan–full.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/shadowsocks–full.zip
          asset_name: shadowsocks–full.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/naiveproxy.zip
          asset_name: naiveproxy.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/openwrt.zip
          asset_name: openwrt.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/forwardproxy.zip
          asset_name: forwardproxy.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/glider.zip
          asset_name: glider.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/gost.zip
          asset_name: gost.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/hysteria.zip
          asset_name: hysteria.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/pingtunnel.zip
          asset_name: pingtunnel.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/echo.zip
          asset_name: echo.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/netch.zip
          asset_name: netch.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/bbdown.zip
          asset_name: bbdown.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/youtube-dl-full.zip
          asset_name: youtube-dl-full.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/lanzou-gui.zip
          asset_name: lanzou-gui.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/aliyunpan.zip
          asset_name: aliyunpan.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/unlock-music.zip
          asset_name: unlock-music.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/filebrowser.zip
          asset_name: filebrowser.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/m3u8-cli.zip
          asset_name: m3u8-cli.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/yesplaymusic.zip
          asset_name: yesplaymusic.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/vue-color-avatar.zip
          asset_name: vue-color-avatar.zip
          asset_content_type: application/zip
          
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/onlyfans.zip
          asset_name: onlyfans.zip
          asset_content_type: application/zip
            
      - name: Delete Older Release
        uses: dev-drprasad/delete-older-releases@v0.2.0
        if: (!cancelled())
        with:
          repo: bolucat/Archive
          keep_latest: 20
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
      - name: Healthy Check
        if: (!cancelled())
        run: |
          echo "Check space usage"
          df -hT
          echo "Check memory usage"
          free -m
